{"version":3,"sources":["assets/svg/hangar_logo_large.svg","assets/svg/linkedin.svg","assets/svg/facebook.svg","assets/svg/hangar_logo_small.svg","assets/svg/arrow.svg","Components/Home.js","Components/ImageDetail.js","Components/SearchInput.js","Components/Footer.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","to","src","HangarLogo","alt","Component","ImageDetail","props","useState","inProp","setInProp","result","img","index","imgIndex","imgNum","selectedIndex","arrayLength","len","displayDetail","displayImgDetail","divDetail","nextDivisible","previousDivisible","id","setTimeout","CSSTransition","key","in","timeout","classNames","type","aria-label","onClick","e","aria-hidden","description","Facebook","LinkedIn","SearchInput","onSubmit","getSearchItems","htmlFor","autoComplete","value","searchValue","onChange","setSearchVal","target","placeholder","autoFocus","Footer","HangarIcon","Search","state","searchResult","imageDetail","selectedImage","loading","error","bind","axios","get","this","then","response","setState","data","catch","getItemsList","preventDefault","val","detail","itemNum","content","loader","color","height","width","message","length","Fragment","map","process","image","title","Arrow","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6fbd71bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hangar_logo_large.5f1cfe60.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.baab8628.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.c6d08ceb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hangar_logo_small.95143775.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.778883f2.svg\";","import React, { Component } from 'react';\n\nimport { Link } from \"@reach/router\";\n\nimport '../assets/scss/Home.scss';\nimport HangarLogo from '../assets/svg/hangar_logo_large.svg';\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div className = \"mainclass\">\n        <div className = \"home\">\n          <Link to = \"/search\">\n            <img src = {HangarLogo} alt = \"Hangar Logo\" className=\"img-fluid\"/>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React,{useState} from 'react'\n\nimport { CSSTransition } from 'react-transition-group';\nimport '../assets/scss/ImageDetail.scss';\nimport LinkedIn from '../assets/svg/linkedin.svg';\nimport Facebook from '../assets/svg/facebook.svg';\n\nfunction ImageDetail(props) {\n  const [inProp, setInProp] = useState(false);\n  const result = props.img; //detail of the item\n  const index = props.imgIndex; // index of each image\n  const imgNum = props.selectedIndex; // index of selected image\n  const arrayLength = props.len; // length of the array\n  const displayDetail = props.displayImgDetail; \n  let divDetail = '';\n\n  let nextDivisible = 3 + (imgNum - (imgNum%3)) - 1; // next divisible number by 3\n  let previousDivisible = 3 + (imgNum - (imgNum%3)) - 4; // previous divisible number by 3\n\n  if ( result.id ) {\n    // checking if an index is divisible by 3 or if index is the last index in an array\n    if ( props.imgIndex % 3 === 2 || index === arrayLength ) {\n      if( nextDivisible >= index && previousDivisible < index ) {\n        setTimeout(() => {\n          setInProp(true)\n        }, 0);\n        divDetail = <div className = \"row mx-0 px-1 pb-5\">\n                        <div className = \"card border-0 shadow-sm w-100 text-left\">\n                          <CSSTransition key={result.id} in={inProp} timeout={100} classNames=\"description\">\n                           { inProp ?  \n                            <div className = \"card-body\">\n                              <span type = \"button\" className = \"close\" aria-label = \"Close\" onClick={(e) => displayDetail({},'')}>\n                                <span className = \"px-1 text-light bg-dark\" aria-hidden = \"true\">&times;</span>\n                              </span>\n                              <h6 className = \"card-title font-weight-bold\"> Image history </h6>\n                                <p className = \"history\"> {result.description} </p>\n                              <div className = \"pt-5 w-100 d-flex justify-content-end\">\n                              <div className = \"justify-content-center\">\n                                <img src = {Facebook} alt=\"Facebook\"/>\n                                <img src = {LinkedIn} alt=\"Linkedin\" />\n                              </div>\n                            </div>\n                          </div> : <div></div> }\n                          </CSSTransition>\n                        </div>\n                      </div>\n                    \n      }\n    }\n  } else {\n    setTimeout(() => {\n      setInProp(false)\n    }, 0);\n  }\n\n  return (\n   divDetail\n  )\n\n}\n\nexport default ImageDetail\n","import React from 'react'\n\nfunction SearchInput(props) {\n  return (\n    <form className = \"row mx-0 px-2\" onSubmit = {props.getSearchItems}>\n      <label htmlFor = \"search\">\n        <h4 className = \"letter-spacing font-weight-bold\"> Search </h4>\n      </label>\n      <div className = \"input-group mb-3\">\n        <input \n          type = \"text\" \n          autoComplete=\"off\" \n          value = {props.searchValue} \n          onChange = {e => props.setSearchVal(e.target.value)} \n          placeholder = \"Photos ...\" \n          className = \"form-control d-flex border border-dark rounded-0 rounded-lg py-4\" \n          autoFocus id = \"search\"\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport HangarIcon from '../assets/svg/hangar_logo_small.svg';\n\nfunction Footer() {\n  return (\n    <div className = \"row m-4 justify-content-center\">\n      <img src = {HangarIcon} alt=\"Hangar Icon\" />\n      <div className = \"footer-note text-left font-weight-light ml-4\">\n        <div> &copy;2020 Hangar Worldwide. </div>\n        <div> All Rights Reserved. Privacy Polivy </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\nimport { Link } from \"@reach/router\";\nimport ImageDetail from './ImageDetail';\nimport SearchInput from './SearchInput';\nimport Loader from 'react-loader-spinner';\nimport Footer from './Footer';\n\nimport '../assets/scss/Search.scss';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Arrow from '../assets/svg/arrow.svg';\n\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      searchResult: [],\n      imageDetail: {},\n      selectedImage: '',\n      loading: true,\n      error: null\n    };\n\n    this.getSearchItems = this.getSearchItems.bind(this);\n    this.displayDetail = this.displayDetail.bind(this);\n    this.setSearchVal = this.setSearchVal.bind(this);\n  }\n\n  getItemsList() {\n    axios.get(`http://localhost:4001/items?q=${\n      this.state.searchValue\n    }`)\n    .then(response => {\n      this.setState({\n        searchResult: response.data,\n        loading: false,\n        imageDetail: {},\n        selectedImage: ''\n      });\n    })\n    .catch(error => {\n      this.setState({\n        loading: false,\n        error: error,\n      });\n    });\n  }\n  \n  componentDidMount() {\n    this.getItemsList();\n  }\n\n  getSearchItems(e) {\n    e.preventDefault();\n    this.setState({\n      searchResult: {},\n      loading: true,\n      imageDetail: {},\n      selectedImage: ''\n    });\n    setTimeout(() => {\n      this.getItemsList();\n    }, 500);\n  }\n\n  setSearchVal(val) {\n    this.setState({\n      searchValue: val\n    })\n  }\n\n  displayDetail(detail,itemNum) {\n    if(this.state.imageDetail.id && this.state.imageDetail.id === detail.id) {\n      this.setState({\n        imageDetail: {},\n        selectedImage: ''\n      });\n    } else {\n      this.setState({\n        imageDetail: detail,\n        selectedImage: itemNum\n      });\n    }\n  }\n\n  render() {\n    const { searchValue, searchResult, imageDetail, selectedImage, loading} = this.state;\n\n    let content = '';\n    let loader = ''\n\n    if ( loading ) {\n      loader = <Loader\n                type=\"TailSpin\"\n                color=\"#00BFFF\"\n                height={50}\n                width={50}\n                timeout={10000} //3 secs\n              />;\n    } else {\n      loader = '';\n      if (this.state.error) {\n        content = <div className = \"mx-0 mb-4 pl-1 letter-spacing\">\n                    <h5 className=\"border-bottom pb-4 mb-5\"> {this.state.error.message} </h5>\n                  </div>\n      }\n\n      if ( searchResult && searchResult.length ) {\n        content = <React.Fragment>\n                  <div className = \"row mx-0 mt-4 pl-2 letter-spacing\">\n                    <h6><small  className = \"font-weight-bold\"> ALL RESULTS </small></h6>\n                  </div>\n          \n                  <div className = \"row mx-0 px-1\">\n                    {searchResult.map((result,index) => (\n                      <React.Fragment key = {index}>\n                        <div  \n                          className = {\"col-4 \" + (index !== selectedImage && selectedImage !== '' ? 'inactive' : '')} \n                          id = \"res-image\" \n                          key = {result.id} \n                          onClick = {(e) => this.displayDetail(result, index)}\n                        >\n                          <img className = \"img-fluid\" src = {process.env.PUBLIC_URL + result.image} alt = {result.title} />\n                        </div>\n          \n                        <ImageDetail \n                          img = {imageDetail} //detail of the item\n                          selectedIndex = {selectedImage} // index of selected image\n                          imgIndex = {index} // index of each image\n                          len = {searchResult.length - 1} // length of the array\n                          displayImgDetail = {this.displayDetail}\n                        />\n                      </React.Fragment>\n                    ))}\n                  </div>\n                </React.Fragment>;\n      } else if (searchValue && !searchResult.length) {\n        content = <div className = \"mx-0 mb-4 pl-2 letter-spacing\">\n                    <h5 className=\"border-bottom pb-4 mb-5\"> No items found </h5>\n                  </div>\n      }\n    }\n\n    return (\n      <div className = \"row mx-0 mainSearch\">\n        <div className = \"home-search\">\n\n          <div className = \"row mx-0 justify-content-center py-4 px-5\">\n            <Link to = \"/\">\n              <img src = {Arrow} alt=\"arrow\" />\n            </Link>  \n          </div>\n\n          <SearchInput \n            searchValue = {searchValue} \n            getSearchItems = {this.getSearchItems} \n            setSearchVal = {this.setSearchVal}\n          />\n\n          {content}\n          {loader}\n\n          <Footer />\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import React from 'react';\nimport './App.css';\n\nimport { Router } from \"@reach/router\";\nimport Home from './Components/Home';\nimport Search from './Components/Search';\n\nfunction App() {\n  return (\n    <div className = \"App\">\n      <Router className = \"router-height\">\n        <Home path = {process.env.PUBLIC_URL + '/'} />\n        <Search path = \"/search\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}